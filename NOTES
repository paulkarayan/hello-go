https://howistart.org/posts/go/1/

go build
./hello-go

go get github.com/paulkarayan/hello-go
$GOPATH/bin/hello-go

curl http://localhost:8080

499d596ddaae4d4f27e97b07c6a1de22

curl http://localhost:8080/weather/tokyo


---

https://github.com/quii/learn-go-with-tests/blob/master/hello-world.md

go run ~/go-wks/src/github.com/paulkarayan/hello-go/hello.go
go test ~/go-wks/src/github.com/paulkarayan/hello-go

# see all packages install on my system
godoc -http :8000 -goroot ~/go-wks/src/github.com/paulkarayan/hello-go
http://localhost:8000/pkg/


t.Helper() is needed to tell the test suite that this method is a helper.
By doing this when it fails the line number reported will be in our function call rather than inside our test helper.

-- integers

go run ~/go-wks/src/github.com/paulkarayan/hello-go/integers/integers.go
go test ~/go-wks/src/github.com/paulkarayan/hello-go/integers

 the example function will not be executed if you remove the comment //Output: 6


-- iterator

go run ~/go-wks/src/github.com/paulkarayan/hello-go/integers/integers.go
go test ~/go-wks/src/github.com/paulkarayan/hello-go/integers

-- iterator

go run ~/go-wks/src/github.com/paulkarayan/hello-go/iterator/iterator.go
go test ~/go-wks/src/github.com/paulkarayan/hello-go/iterator

# benchmarks
go test -bench=. ~/go-wks/src/github.com/paulkarayan/hello-go/iterator

-- arrays

Arrays have a fixed capacity which you define when you declare the variable. We can initialize an array in two ways:

[N]type{value1, value2, ..., valueN} e.g. numbers := [5]int{1, 2, 3, 4, 5}
[...]type{value1, value2, ..., valueN} e.g. numbers := [...]int{1, 2, 3, 4, 5}

go test ~/go-wks/src/github.com/paulkarayan/hello-go/arrays

Array:
[5]int{1, 2, 3, 4, 5}
Slice:
[]int{1, 2, 3, 4, 5}

go test -cover ~/go-wks/src/github.com/paulkarayan/hello-go/arrays


Go does not let you use equality operators with slices.
we can use reflect.DeepEqual which is useful for seeing if any two variables are the same.
=> not type safe!!


"variadic functions" - arbitrary number of inputs
func sum(nums ...int) {